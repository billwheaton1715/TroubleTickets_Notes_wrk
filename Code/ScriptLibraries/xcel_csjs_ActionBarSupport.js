function debounce( func , timeout ) {	   var resizeTimeout , timeout = timeout || 200;	   return function () {	      var scope = this , args = arguments;	      if (resizeTimeout != null)  clearTimeout( resizeTimeout );	      resizeTimeout = setTimeout( function () {	          func.apply( scope , Array.prototype.slice.call( args ) );	      } , timeout );	   }	}window.onresize = debounce(function() {	checkWidthChanges();//calling this method on window resize as well}, 700);/* * This method checks how many items in the action bar do not fit in one line and moves them to an extra button. Hovering over that button, will show the items.  * When you resize the window, the method can assess if there is more space to fit the buttons and puts them back on the action bar, or visa versa. * */function checkWidthChanges(){	var extraButton = document.getElementById("extraButtonActionBar");	var actionBar = document.getElementById("cssmenu");	var actionBarWidth = dojo.marginBox(actionBar).w;	var liTotalLength=0;	var ul = actionBar.children[0];//getting the UL direct child of our menu div	for(var i=0; i< ul.children.length; i++){				var child = ul.children[i];		var childWidth = dojo.marginBox(child).w;		liTotalLength += childWidth;				//marking the elements that should be moved under an extra button		if(liTotalLength+70>=actionBarWidth){				child.setAttribute('customflag','toMove');				child.setAttribute('itemwidth',childWidth);							  			}																}	if (extraButton){			//let's do resizing back		var tempActionBarWidth=liTotalLength;				var extraButtons = extraButton.children[1].children;//getting the UL element of this hover over extra button. The UL contains extra nodes		extraButton.removeAttribute('itemwidth');//removing these attributes from the 'More' extra button itself		extraButton.removeAttribute('customflag');				//this part of code loops through the items and checks if they can be added to the action bar. IF the width permits, they are moved back		var k = 0; while (k<extraButtons.length) {		    				tempActionBarWidth += Number(extraButtons[k].getAttribute('itemwidth'));							if(tempActionBarWidth <actionBarWidth){					extraButtons[k].removeAttribute('itemwidth');					extraButtons[k].removeAttribute('customflag');					dojo.place(extraButtons[k], extraButton, "before");									}				else break;			}		//the extra button is empty, we may remove it		if(extraButtons.length ==0) dojo.destroy(extraButton);				//this part of the code assesses if the items should be put back under the extra button, if the action bar shrinks on window resize				if(liTotalLength>actionBarWidth){			var elementsToMove = dojo.query("li[customFlag='toMove']",ul);			var i = elementsToMove.length; 			while(i--)			{				dojo.place(elementsToMove[i], extraButton.children[1], "first");				}			}		}	else{				//If no extra button was created, let's check if the menu items fit on the screen. If not, we will move them under this extra button		if(liTotalLength>actionBarWidth){			//creating an extra button element			extraButton = document.createElement("li");			var extraLink = document.createElement("a");			extraButton.setAttribute('class','menu  has-sub extraButton');				extraButton.setAttribute('id', 'extraButtonActionBar')						var spanText = document.createElement("span");			spanText.innerHTML="More";			var spanArrow = document.createElement("span");			spanArrow.setAttribute('class','gbma');							extraLink.appendChild(spanText);			extraLink.appendChild(spanArrow);						dojo.place(extraButton, ul, "last");			dojo.place(extraLink, extraButton, "last");			//creating a UL holder for the action bar items that didn't fit			var newSub = document.createElement("ul");			newSub.setAttribute('class','vertical  is-sub');						dojo.query("li[customflag='toMove']",ul).forEach(function(node){			    			    dojo.place(node, newSub, "last");				    node.removeAttribute('customflag');			});			dojo.place(newSub, extraButton, "last");  		}			}}function hideEmptyMenuItems(){	var actionBar = document.getElementById("cssmenu");	var ul = actionBar.children[0];	var topLevelChildren = dojo.query(">li",ul).forEach(function(node){			    		if(node.children.length == 0) dojo.destroy(node);	});	var uls = dojo.query("ul.is-sub",actionBar).forEach(function(node){			    		if(node.children[0].children.length == 0) {						dojo.destroy(node.parentNode);			hideEmptyMenuItems();		}	});}/**/function addSubformActions(){		//topmenu is actionbar from form or view		//var topMenu = "#{javascript:getClientId('topMenu');}";	var topMenu = dojo.query("ul[id$='topMenu']")[0].id;	//sfMenu is the action list from subform (root ul)				//var sfMenu = "#{javascript:getClientId('sfList');}";		var sfMenu= dojo.query("ul[id$='sfList']")[0].id;			var root = document.getElementById(sfMenu);	if (root == null) return;	var listLength = root.children.length;			var extraButton = document.getElementById("extraButtonActionBar");	if(!extraButton){		var actionBarWidth = dojo.marginBox("cssmenu").w;//width of the action bar of the form			var ul= document.getElementById(topMenu);//the ul element of the action bar		var liTotalLength = Number(ul.getAttribute('itemwidth'));//getting the total width of the action bar list items				//cycle through the children (li's) and add to the topLevel Menu		for (var  i=0; i < listLength;i++){			var child = root.children[0];    					dojo.place(child, topMenu, "last");//placing to the main action bar to get the width first			var childWidth = dojo.marginBox(child).w;				child.setAttribute('itemwidth',childWidth);				liTotalLength += childWidth;							//marking the elements that should be moved under an extra button			if(liTotalLength+100 >= actionBarWidth){					child.setAttribute('customflag','toMove');											  				}				}		if(liTotalLength > actionBarWidth){			//creating an extra button element			extraButton = document.createElement("li");			var extraLink = document.createElement("a");			extraButton.setAttribute('class','menu  has-sub extraButton');				extraButton.setAttribute('id', 'extraButtonActionBar')						var spanText = document.createElement("span");			spanText.innerHTML="More";			var spanArrow = document.createElement("span");			spanArrow.setAttribute('class','gbma');							extraLink.appendChild(spanText);			extraLink.appendChild(spanArrow);						dojo.place(extraButton, ul, "last");			dojo.place(extraLink, extraButton, "last");			//creating a UL holder for the action bar items that didn't fit			var newSub = document.createElement("ul");			newSub.setAttribute('class','vertical  is-sub');						dojo.query("li[customflag='toMove']",topMenu).forEach(function(node){			    			    dojo.place(node, newSub, "last");					    node.removeAttribute('customflag');			});			dojo.place(newSub, extraButton, "last");  		}	}	else{		//cycle through the children (li's) and add to the topLevel Menu		for (var  i=0; i < listLength;  i++){			var child = root.children[0]; 					  			dojo.place(child,topMenu, "last");//placing to the main action bar to get the width first			var childWidth = dojo.marginBox(child).w;				child.setAttribute('itemwidth',childWidth); 					dojo.place(child, extraButton.children[1], "last");//placing it back with width attr set to the Extra Button		}	}					dojo.destroy(sfMenu);//get rid of the remaining ul		}